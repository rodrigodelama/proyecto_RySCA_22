arp.c
    line 81:
            eth_send(iface, MAC_BCAST_ADDR, 0x0806, (unsigned char *) &arp_header_t, sizeof(struct arp_header));

ipv4_client.c
    line 29:
            ipv4_layer_t* my_ip_iface = ipv4_open("./ipv4_config_client.txt", "./ipv4_route_table_client.txt");
    line 35:
            unsigned char fake_payload[1200];
    line 43 & 44:
            ipv4_header_t.total_length = htons((uint16_t) IPV4_HDR_LEN + sizeof(fake_payload));
            ipv4_header_t.identification = htons((uint16_t) ID);
    line 51:
            memcpy(ipv4_header_t.payload, fake_payload, sizeof(char)*1200);
    line 53:
            ipv4_header_t.checksum = htons(ipv4_checksum((unsigned char *) &ipv4_header_t, IPV4_HDR_LEN));
    line 55:
            ipv4_send(my_ip_iface, ipv4_header_t.dest_ip, ipv4_header_t.protocol, ipv4_header_t.payload, 0);

ipv4_server.c
    lines 14 and 16:
            ipv4_addr_t sender_ip;
            if(ipv4_str_addr(argv[1], sender_ip) == -1)
    line 29:
            ipv4_layer_t* my_ip_iface = ipv4_open("./ipv4_config_server.txt", "./ipv4_route_table_server.txt");
    lines 35 and 36: (DELETE BOTH FOR THIS)
            int bytes_rcvd = 0;
    line 37:
            long int timeout = 5000;
    line 39:
            bytes_rcvd = ipv4_recv(my_ip_iface, 17,buffer, sender_ip, 0, timeout);
        MAYBE ECHO A PACKET ??

ipv4.c
    line 122 (INSERT BEHIND): ipv4_open()
            memset(ipv4_layer, 0, sizeof(ipv4_layer_t));
    line 132 (IB):
            ipv4_layer->routing_table = ipv4_route_table_create();
    line 174 & 175:
            ipv4_header_t.total_length = htons((uint16_t) 20 + payload_len);
            ipv4_header_t.identification = htons((uint16_t) ID);
    line 184:
            ipv4_header_t.checksum = htons(ipv4_checksum((unsigned char *) &ipv4_header_t, IPV4_HDR_LEN));
    line 205: (INSERTAR antes del IF)
            ipv4_addr_t zeros_ip_address;
            ipv4_str_addr("0.0.0.0", zeros_ip_address);
            if(memcmp(route_to_dst->gateway_addr, zeros_ip_address, sizeof(ipv4_addr_t)) == 0)
    line 214:
            bytes_sent = eth_send(sender_iface, mac_dest, PROT_TYPE_IPV4, (unsigned char *) &ipv4_header_t, (20 + payload_len));
    line 228:
            bytes_sent = eth_send(sender_iface, mac_dest, PROT_TYPE_IPV4, (unsigned char *) &ipv4_header_t, (20 + payload_len));
    line 270:
            packet_len = eth_recv(layer->iface, mac_src, PROT_TYPE_IPV4, ipv4_buffer, (20 + packet_buf_len), time_left);
    line 345:
            original_checksum = ntohs(ipv4_packet_ptr->checksum);
