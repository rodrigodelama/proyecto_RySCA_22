Tareas S03
Pseudo-codigo funcion ipv4_route_lookup():

int ipv4_route_lookup(ipv4_route_t * route, ipv4_addr_t addr)


/*  
    ipv4_addr_t subnet_addr; //198.162.1.0
    ipv4_addr_t subnet_mask; //255.255.255.0 -> /24 [0,23]
                        11111111 11111111 11111111 00000000
*/

Indicar si la dirección IP puesta como argumento prenece a un prefijo también pasado como argumento. (OBJETIVO)

- 1º Averiguamos el tamaño del prefijo de la máscara de la ruta indicada.
- 2º Tranformaremos a binario: route->subnet_mask
- 3º Para averiguar el tamaño del prefijo, recorremos esa ristra binaria, y cuando nos encontremos un 0, pararemos y guardaremos el índice (+1) en el que paremos.
- 4º Tranformar las direcciones ip de la subred y la otra que está de argumento.
- 5º Comparamos los primeros X (tamaño del prefijo) miembros de cada ristra de bits, y cada posición la comparamos con un & (operador de bit lógico), si sale 1, 
    pertenece a la subred -> devolvemos tamaño del prefijo.
- 6º Si no da 1 la comparación, devolvemos un -1. 

Prototipo funciones ipv4_open(), ipv4_close(), ipv4_send(), ipv4_recv():

ipv4_open(eth_iface_t * iface, ipv4_addr_t ip_host);

ipv4_close(eth_iface_t * iface, ipv4_addr_t ip_host);

ipv4_send(eth_iface_t * iface, ipv4_addr_t ip_addr_dest);

ipv4_recv(eth_iface_t * iface, ipv4_addr_t ip_addr_dest);//Siendo ip_addr_dest la dir IP que esperamos recibir.
